from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import random

# –•—Ä–∞–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤
players = {}

# –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    players[user_id] = {
        "hp": 20,
        "gold": 0,
        "potions": 1,
        "stage": "intro"
    }

    await update.message.reply_text(
        "üåå –¢—ã –æ—á–Ω—É–ª—Å—è —É –≤—Ö–æ–¥–∞ –≤ –¥—Ä–µ–≤–Ω–µ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ.\n"
        "–ì–æ–≤–æ—Ä—è—Ç, –≤–Ω—É—Ç—Ä–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–æ–∫—Ä–æ–≤–∏—â–µ, –Ω–æ –µ–≥–æ –æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç—ë–º–Ω—ã–π –≤–ª–∞–¥—ã–∫–∞...\n"
        "–ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?",
        reply_markup=choices_intro()
    )

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞
def choices_intro():
    keyboard = [
        [InlineKeyboardButton("‚öî –í–æ–π—Ç–∏ –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ", callback_data="enter")],
        [InlineKeyboardButton("üèÉ –£–π—Ç–∏ –¥–æ–º–æ–π", callback_data="leave")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ú–µ–Ω—é –±–æ—ë–≤
def choices_battle():
    keyboard = [
        [InlineKeyboardButton("üó° –ê—Ç–∞–∫–æ–≤–∞—Ç—å", callback_data="attack")],
        [InlineKeyboardButton("üç∑ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–µ–ª—å–µ", callback_data="potion")],
        [InlineKeyboardButton("üèÉ –°–±–µ–∂–∞—Ç—å", callback_data="run")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –ø–æ–±–µ–¥—ã
def choices_after_battle():
    keyboard = [
        [InlineKeyboardButton("‚û° –î–∞–ª—å—à–µ", callback_data="next_stage")],
        [InlineKeyboardButton("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å", callback_data="inventory")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    player = players.get(user_id)

    if not player:
        await query.edit_message_text("–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ /start")
        return

    # --- –í–°–¢–£–ü–õ–ï–ù–ò–ï ---
    if query.data == "enter" and player["stage"] == "intro":
        player["stage"] = "monster1"
        await query.edit_message_text(
            "–¢—ã –∑–∞—Ö–æ–¥–∏—à—å –≤–Ω—É—Ç—Ä—å... üë£\n"
            "–ò–∑ —Ç–µ–Ω–∏ –≤—ã–ø—Ä—ã–≥–∏–≤–∞–µ—Ç –ø–µ—Ä–≤—ã–π –º–æ–Ω—Å—Ç—Ä ‚Äî –ì–æ–±–ª–∏–Ω!",
            reply_markup=choices_battle()
        )
        player["monster_hp"] = 10

    elif query.data == "leave" and player["stage"] == "intro":
        players.pop(user_id)
        await query.edit_message_text("–¢—ã —Ä–µ—à–∏–ª –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å –∏ —É—à—ë–ª –¥–æ–º–æ–π. üè° –ö–æ–Ω–µ—Ü –∏–≥—Ä—ã.")

    # --- –ë–û–ô ---
    elif query.data == "attack":
        dmg = random.randint(3, 6)
        player["monster_hp"] -= dmg
        if player["monster_hp"] <= 0:
            player["gold"] += 5
            text = f"üéâ –¢—ã –ø–æ–±–µ–¥–∏–ª –≤—Ä–∞–≥–∞ –∏ –ø–æ–ª—É—á–∏–ª 5 –∑–æ–ª–æ—Ç–∞!\n–¢–µ–∫—É—â–∏–µ HP: {player['hp']}"
            player["stage"] = "after_battle"
            await query.edit_message_text(text, reply_markup=choices_after_battle())
        else:
            # –ú–æ–Ω—Å—Ç—Ä –±—å–µ—Ç
            mdmg = random.randint(2, 5)
            player["hp"] -= mdmg
            if player["hp"] <= 0:
                players.pop(user_id)
                await query.edit_message_text("‚ò†Ô∏è –ú–æ–Ω—Å—Ç—Ä –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–ª—å–Ω–µ–µ... –¢—ã –ø–æ–≥–∏–±.")
            else:
                await query.edit_message_text(
                    f"–¢—ã —É–¥–∞—Ä–∏–ª –º–æ–Ω—Å—Ç—Ä–∞ –Ω–∞ {dmg} —É—Ä–æ–Ω–∞!\n"
                    f"–ú–æ–Ω—Å—Ç—Ä –∞—Ç–∞–∫–æ–≤–∞–ª –∏ —Å–Ω—è–ª {mdmg} HP.\n"
                    f"–¢–≤–æ–∏ HP: {player['hp']} | HP –º–æ–Ω—Å—Ç—Ä–∞: {player['monster_hp']}",
                    reply_markup=choices_battle()
                )

    elif query.data == "potion":
        if player["potions"] > 0:
            player["hp"] = min(20, player["hp"] + 8)
            player["potions"] -= 1
            await query.edit_message_text(
                f"üç∑ –¢—ã –≤—ã–ø–∏–ª –∑–µ–ª—å–µ. HP: {player['hp']} | –ó–µ–ª–∏–π –æ—Å—Ç–∞–ª–æ—Å—å: {player['potions']}",
                reply_markup=choices_battle()
            )
        else:
            await query.edit_message_text("‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∑–µ–ª–∏–π!", reply_markup=choices_battle())

    elif query.data == "run":
        player["stage"] = "intro"
        await query.edit_message_text("–¢—ã —Å–±–µ–∂–∞–ª –æ–±—Ä–∞—Ç–Ω–æ –∫–æ –≤—Ö–æ–¥—É. üö™", reply_markup=choices_intro())

    # --- –ü–û–°–õ–ï –ë–ò–¢–í–´ ---
    elif query.data == "next_stage" and player["stage"] == "after_battle":
        player["stage"] = "boss"
        player["monster_hp"] = 20
        await query.edit_message_text(
            "–¢—ã –∏–¥—ë—à—å –¥–∞–ª—å—à–µ –ø–æ —Ç—ë–º–Ω–æ–º—É –∫–æ—Ä–∏–¥–æ—Ä—É... üî¶\n"
            "–í–Ω–µ–∑–∞–ø–Ω–æ –≤–æ–∑–¥—É—Ö —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç—è–∂—ë–ª—ã–º. –ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¢–Å–ú–ù–´–ô –í–õ–ê–î–´–ö–ê! üëπ",
            reply_markup=choices_battle()
        )

    elif query.data == "inventory":
        await query.edit_message_text(
            f"üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:\nHP: {player['hp']}\n–ó–æ–ª–æ—Ç–æ: {player['gold']}\n–ó–µ–ª—å—è: {player['potions']}",
            reply_markup=choices_after_battle()
        )

    # --- –§–ò–ù–ê–õ ---
    if player.get("stage") == "boss" and player["hp"] > 0 and player["monster_hp"] <= 0:
        await query.edit_message_text(
            "üî• –¢—ã –ø–æ–±–µ–¥–∏–ª –¢—ë–º–Ω–æ–≥–æ –í–ª–∞–¥—ã–∫—É!\n"
            "–í —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å —Å—É–Ω–¥—É–∫ —Å –∑–æ–ª–æ—Ç–æ–º –∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç.\n"
            "üåü –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≥–µ—Ä–æ–π! –¢—ã –ø—Ä–æ—à—ë–ª –ø–æ–¥–∑–µ–º–µ–ª—å–µ!",
        )
        players.pop(user_id)


if __name__ == "__main__":
    TOKEN = "5510933125:AAFpVK0ndCpCh548sdx02-Bx0BcUHz8iJI4"
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))

    print("RPG-–±–æ—Ç —Å —Å—é–∂–µ—Ç–æ–º –∑–∞–ø—É—â–µ–Ω‚Ä¶")
    app.run_polling()
